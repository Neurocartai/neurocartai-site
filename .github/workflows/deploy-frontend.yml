name: Deploy Frontend to Firebase Hosting

on:
  push:
    branches: [ main ]
    paths:
      - "frontend/**"
      - "public/**"
      - "firebase.json"
      - ".firebaserc"
      - "package.json"
      - "pnpm-lock.yaml"
      - "yarn.lock"
      - "package-lock.json"
      - ".github/workflows/deploy-frontend.yml"

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      # Change this if your built site outputs somewhere else
      BUILD_OUTPUT_DIR: dist

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect frontend location
        id: where
        shell: bash
        run: |
          if [ -f frontend/package.json ]; then
            echo "dir=frontend" >> "$GITHUB_OUTPUT"
          else
            echo "dir=." >> "$GITHUB_OUTPUT"
          fi

      - name: Setup Node (only if package.json exists)
        if: ${{ hashFiles( format('{0}/package.json', steps.where.outputs.dir) ) != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            ${{ steps.where.outputs.dir }}/package-lock.json
            ${{ steps.where.outputs.dir }}/pnpm-lock.yaml
            ${{ steps.where.outputs.dir }}/yarn.lock

      - name: Install dependencies
        if: ${{ hashFiles( format('{0}/package.json', steps.where.outputs.dir) ) != '' }}
        working-directory: ${{ steps.where.outputs.dir }}
        run: |
          if [ -f pnpm-lock.yaml ]; then
            corepack enable
            pnpm i --frozen-lockfile
          elif [ -f yarn.lock ]; then
            yarn --frozen-lockfile
          else
            npm ci
          fi

      - name: Build (skip if no build script)
        if: ${{ hashFiles( format('{0}/package.json', steps.where.outputs.dir) ) != '' }}
        working-directory: ${{ steps.where.outputs.dir }}
        run: |
          if jq -re '.scripts.build' package.json > /dev/null 2>&1; then
            npm run build
          else
            echo "No build script found, skipping build."
            # For static sites with no build, ensure 'public' exists
            mkdir -p public
          fi

      # Deploy using the official Firebase Hosting action
      - name: Deploy to Firebase Hosting (live)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}              # provided by GitHub
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_NEUROCARTAI }}  # your JSON secret
          channelId: live
          projectId: neurocartai-467717
          target: default
          entryPoint: ${{ steps.where.outputs.dir }}
